@page "/servers"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
<PageTitle>Server-Manager</PageTitle>
<style>
    .Buttons{display: flex;
    justify-content: space-around;}
</style>
<h3>Servers</h3>
<br/>
<br/>

<div class="Buttons">
@foreach(var c in cities)
{
    <div class="card" style="">
  <img src="@($"/images/{c}.png")" class="card-img-top" alt="...">
  <div class="card-body">
  <button class="btn btn-primary" @onclick="()=>City(c)">@c</button>
  </div>
</div>
}
</div>
<div>
    <ul>
@foreach(var server in servers){
<li>@server.Name in @server.City is <span style="color:@(server.IsOnline?"green":"red");">@(server.IsOnline?"online":"offline")</span> <a href="/servers/@server.Id">Edit</a></li>
<EditForm Model="server" FormName="@($"form-server-{server.Id}")" OnValidSubmit="@(()=>DeleteServer(server.Id))">

<button class="btn-primary btn" type="Submit">Delete</button>
</EditForm>
}
    </ul>
</div>
<a class="btn btn-primary" href="/servers/add">Add Server</a>

@code {

    private List<string> cities = CityRepository.GetCity();
    private List<Server> servers = new List<Server>();

    private void City(string city)
    {
        servers = ServersRepository.GetServersByCity(city);
    }
    private void DeleteServer(int Id)
    {
        if(Id>0)
        {
            ServersRepository.DeleteServer(Id);
         NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
        }
    }
}
