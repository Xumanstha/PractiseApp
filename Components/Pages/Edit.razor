@page "/servers/{id:int}"
@inject NavigationManager NavigationManager
<h1>Edit Server</h1>
@if(server!=null)
{
    <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <InputNumber  @bind-Value="server.Id" hidden></InputNumber>
    <div class="row mb-3">
        <div class="col-2">
<label class="col-form-label">Name</label>
        </div>
<div class="col-6">
    <InputText @bind-Value="server.Name" class="form-control"></InputText>
    <ValidationMessage For="()=>server.Name"></ValidationMessage>
</div>
    </div>
       <div class="row mb-3">
        <div class="col-2">
<label class="col-form-label">City</label>
        </div>
<div class="col-6">
     <InputText @bind-Value="server.City" class="form-control"></InputText>
        <ValidationMessage For="()=>server.City"></ValidationMessage>
</div>
    </div>
      <div class="row mb-3">
        <div class="col-2">
<label class="col-form-label">Online</label>
        </div>
<div class="col-6">
    <InputCheckbox @bind-Value="server.IsOnline"></InputCheckbox>
</div>
    </div>
    <button class="btn btn-primary">Update</button>
    &nbsp;
    <a href="servers" class="btn btn-primary">Close</a>
</EditForm>
}

@code { 
    [Parameter]
public int Id{get;set;}
[SupplyParameterFromForm]
private Server? server{get;set;}
protected override void OnParametersSet()
    {
       server ??=ServersRepository.GetServerById(this.Id);
    }
    private void Submit()
    {
       if(server!=null)
       {
        ServersRepository.UpdateServer(server.Id,server);
       }
       NavigationManager.NavigateTo("/servers");
    }
}
